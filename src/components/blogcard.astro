---
import { Icon } from 'astro-icon'
import type { MarkdownInstance } from 'astro'
import type { Frontmatter } from '../config'
import { categoryDetail } from '../config'
import SVGImg from '../components/svgimg.astro'
import Img from '../components/img.astro'
import Categories from '../components/categories.astro'
import Tags from '../components/tags.astro'

export interface Props {
  post: MarkdownInstance<Frontmatter>
}

const { post } = Astro.props

const image = post.frontmatter.coverImage || post.frontmatter.socialImage || categoryDetail(post.frontmatter.categories && post.frontmatter.categories[0]).socialImage
const svgimg = post.frontmatter.coverSVG || (post.frontmatter.coverImage ? null : categoryDetail(post.frontmatter.categories && post.frontmatter.categories[0]).coverSVG)
---

<section class="p-4 md:w-1/2 lg:w-1/3">
  <div
    class="h-full border-1 border-gray-200 bg-white dark:border-gray-700 dark:bg-gray-800 rounded-lg shadow-xl overflow-hidden p-2"
  >
    <a href={post.url}>
      {
        svgimg ? (
          <SVGImg
            src={svgimg}
            alt={post.frontmatter.title + ' featured image'}
            class="relative w-full h-64 bg-purple-100 dark:bg-purple-800 rounded-lg overflow-hidden group-hover:opacity-75 object-center object-cover"
          />
        ) : (
          <Img
            src={image}
            alt={post.frontmatter.title + ' featured image'}
            class="relative w-full h-64 bg-purple-100 dark:bg-purple-800 rounded-lg overflow-hidden group-hover:opacity-75 object-center object-cover"
          />
        )
      }
      <p class="sr-only">{post.frontmatter.title}</p>
    </a>
    <div class="p-6">
      <Categories categories={post.frontmatter.categories} />
      <a href={post.url}>
        <h1
          class="title-font text-xl font-bold text-purple-600 hover:text-pink-600 dark:text-purple-300 dark:hover:text-pink-300 mt-2"
        >
          {post.frontmatter.title}
        </h1>
      </a>
      <div class="flex items-center flex-wrap">
        <span
          class="text-gray-500 dark:text-gray-400 mr-3 inline-flex items-center leading-none text-xs pr-3 py-1 border-r-2 border-purple-200 dark:border-purple-600"
        >
          <Icon class="w-4 h-4 mr-1" pack="heroicons-outline" name="calendar" />
          {post.frontmatter.publishDate?.slice(0, 10)}
        </span>
        <span
          class="text-gray-500 dark:text-gray-400 mr-3 inline-flex items-center leading-none text-xs pr-3 py-1 border-r-2 border-purple-200 dark:border-purple-600"
        >
          <Icon class="w-4 h-4 mr-1" pack="heroicons-outline" name="clock" />
          {post.frontmatter.minutesRead}
        </span>
        {post.frontmatter.author && (
          <span
          class="text-gray-500 dark:text-gray-400 inline-flex items-center leading-none text-xs"
          >
          <Icon
          class="w-4 h-4 mr-1"
          pack="heroicons-outline"
          name="user-circle"
          />
          {post.frontmatter.author}
          </span>
        )}
      </div>

      <p class="mt-3 italic text-sm text-gray-600 dark:text-gray-300">
        {post.frontmatter.description}
      </p>
      <Tags tags={post.frontmatter.tags} />
    </div>
  </div>
</section>
